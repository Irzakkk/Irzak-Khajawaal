{% schema %}
{
  "name": "Hotspot Products",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section heading",
      "default": "Tisso vision in the wild"
    },
    {
      "type": "number",
      "id": "columns_desktop",
      "label": "Desktop columns (3 recommended)",
      "default": 3
    },
    {
      "type": "number",
      "id": "columns_mobile",
      "label": "Mobile columns (2 recommended)",
      "default": 2
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Hotspot product",
      "limit": 6,
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        },
        {
          "type": "image_picker",
          "id": "override_image",
          "label": "Override product image (optional)"
        },
        {
          "type": "number",
          "id": "hotspot_left",
          "label": "Hotspot left (%)",
          "default": 5
        },
        {
          "type": "number",
          "id": "hotspot_top",
          "label": "Hotspot top (%)",
          "default": 5
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Hotspot Products"
    }
  ]
}
{% endschema %}

<section id="hotspot-products-{{ section.id }}" data-section-id="{{ section.id }}" class="hotspot-products-section">
<style>
  /* Container */
  #hotspot-products-{{ section.id }} { padding: 20px; font-family: system-ui, -apple-system, Helvetica Neue, Arial; color: #111; }
  .hp-grid { display: grid; gap: 18px; grid-template-columns: repeat(3, 1fr); }
  @media (max-width: 989px) { .hp-grid { grid-template-columns: repeat(2, 1fr); } }
  /* Card */
  .hp-card { position: relative; background: #fff; }
  .hp-image { width: 100%; padding-bottom: 100%; background: #f5f5f5; position: relative; }
  .hp-image img { position: absolute; inset: 0; width: 100%; height: 100%; object-fit: cover; display: block; }
  /* Hotspot button */
  .hp-hotspot {
    position: absolute; width: 36px; height: 36px; border-radius: 50%; background: rgba(255,255,255,0.96);
    border: 2px solid rgba(0,0,0,0.1); display: flex; justify-content: center; align-items: center;
    cursor: pointer; transition: transform 0.12s, box-shadow 0.12s; z-index: 20;
  }
  .hp-hotspot .hp-plus { font-size: 18px; font-weight: 700; color: #111; }
  /* Modal */
  .hp-modal {
    position: fixed; inset: 0; display: none; align-items: center; justify-content: center;
    background: rgba(0,0,0,0.45); z-index: 2200; opacity: 0; transition: opacity 0.26s ease;
    padding: 28px; overflow-y: auto;
  }
  .hp-modal.open {
    display: flex;
    opacity: 1;
  }
  .hp-modal__card {
    background: #fff; border-radius: 10px; box-shadow: 0 20px 60px rgba(0,0,0,0.15);
    max-width: 420px; width: 100%; min-height: 580px; padding: 0;
    display: flex; flex-direction: column; position: relative;
  }
  /* Close button */
  .hp-modal-close {
    position: absolute; top: 14px; right: 14px;
    background: transparent; border: none;
    font-size: 28px; font-weight: bold; color: #222;
    cursor: pointer; z-index: 2000; line-height: 1;
  }
  /* Modal top: image left, info right */
  .hp-top {
    display: grid; grid-template-columns: 140px 1fr; gap: 18px;
    padding: 24px 24px 0 24px; align-items: start;
  }
  @media (max-width: 600px) {
    .hp-top {
      grid-template-columns: 1fr;
    }
  }
  /* Image container - bigger height */
  .imgwrap {
    background: #f6f6f6; min-height: 180px;
    display: flex; align-items: center; justify-content: center;
  }
  .imgwrap img {
    width: 100%; height: 100%; object-fit: cover; display: block;
  }
  /* Title, price, desc styling */
  .hp-title {
    font-size: 18px; font-weight: 700; margin: 0 0 6px;
  }
  .hp-price {
    font-size: 16px; font-weight: 700; margin-bottom: 8px;
  }
  .hp-desc {
    font-size: 14px; color: #333; margin-top: 0; line-height: 1.5;
  }
  /* Controls section */
  .hp-controls {
    padding: 18px 24px 24px 24px; border-top: 1px solid #eee;
    display: flex; flex-direction: column; gap: 14px; flex-grow: 1;
  }
  /* Labels */
  .label {
    font-weight: 600; margin-bottom: 8px; font-size: 15px;
  }
  /* Color buttons container */
  .hp-color-wrap {
    display: flex; flex-wrap: wrap; border: 1px solid #ddd; background: #fff;
    min-height: 40px; max-width: 100%; overflow-x: auto;
    gap: 6px; padding: 4px; border-radius: 4px;
  }
  .hp-color {
    flex: 0 0 auto; min-width: 75px; padding: 6px 12px;
    background: transparent; color: #111; font-weight: 700;
    font-size: 15px; text-align: center; cursor: pointer; border: none;
    border-radius: 4px; transition: background-color 0.2s, border-left 0.2s;
  }
  .hp-color.selected,
  .hp-color:hover {
    background: #fff; border-left: 6px solid #111;
  }
  /* Size dropdown */
  .hp-size {
    width: 100%; padding: 10px 12px; font-size: 14px;
    border: 1px solid #ddd; border-radius: 4px; cursor: pointer;
  }
  /* Add to cart button */
  .hp-add {
    background: #111; color: #fff; padding: 14px; font-weight: 700;
    width: 100%; border: none; border-radius: 4px; cursor: pointer;
    display: flex; justify-content: center; align-items: center; gap: 8px;
    font-size: 15px;
  }
  .hp-add::after {
    content: "→"; margin-left: 6px;
  }
</style>

<div class="hp-inner">
  <h2 class="hp-heading">{{ section.settings.heading }}</h2>
  <div class="hp-grid" id="hpGrid-{{ section.id }}">
    {%- for block in section.blocks -%}
      {%- assign prod_handle = block.settings.product -%}
      {% if prod_handle != blank and all_products[prod_handle] %}
        {% assign prod = all_products[prod_handle] %}
      {% else %}
        {% assign prod = nil %}
      {% endif %}
    <div class="hp-card" data-block-id="{{ block.id }}">
      <div class="hp-image">
        {% if block.settings.override_image != blank %}
          <img src="{{ block.settings.override_image | img_url: '800x800' }}" alt="{{ prod.title }}">
        {% elsif prod and prod.featured_image %}
          <img src="{{ prod.featured_image | img_url: '800x800' }}" alt="{{ prod.title }}">
        {% else %}
          <img src="{{ 'placeholder-image.png' | asset_url }}" alt="">
        {% endif %}
      </div>
      {% assign left_pct = block.settings.hotspot_left | default: 5 %}
      {% assign top_pct = block.settings.hotspot_top | default: 5 %}
      <button class="hp-hotspot" type="button" aria-label="Open product quick view" data-open-modal-id="hpModal-{{ block.id }}" style="left: {{ left_pct }}%; top: {{ top_pct }}%;">
        <span class="hp-plus">+</span>
      </button>

      <div id="hpModal-{{ block.id }}" class="hp-modal" role="dialog" aria-hidden="true">
        <div class="hp-modal__card" role="document">
          <button class="hp-modal-close" aria-label="Close" data-close-modal-id="hpModal-{{ block.id }}">✕</button>

          <div class="hp-top">
            <div class="imgwrap">
              {% if block.settings.override_image != blank %}
                <img src="{{ block.settings.override_image | img_url: '600x600' }}" alt="{{ prod.title }}">
              {% elsif prod and prod.featured_image %}
                <img src="{{ prod.featured_image | img_url: '600x600' }}" alt="{{ prod.title }}">
              {% else %}
                <img src="{{ 'placeholder-image.png' | asset_url }}" alt="">
              {% endif %}
            </div>
            <div class="hp-top-text">
              {% if prod %}
                <h3 class="hp-title">{{ prod.title }}</h3>
                <div class="hp-price" data-price-target>
                  {% assign first_variant = prod.variants.first %}
                  {{ first_variant.price | money }}
                </div>
                <div class="hp-desc">{{ prod.description | strip_html | truncate: 130 }}</div>
              {% else %}
                <h3 class="hp-title">No product selected</h3>
                <div class="hp-desc">Please select a product for this hotspot in the theme editor.</div>
              {% endif %}
            </div>
          </div>

          <div class="hp-controls">
            {% if prod %}
              {% assign color_option_index = '' %}
              {% assign size_option_index = '' %}
              {% for opt_name in prod.options %}
                {% assign idx = forloop.index0 %}
                {% assign name_down = opt_name | downcase %}
                {% if color_option_index == '' %}
                  {% if name_down contains 'color' or name_down contains 'colour' %}
                    {% assign color_option_index = idx %}
                  {% endif %}
                {% endif %}
                {% if size_option_index == '' %}
                  {% if name_down contains 'size' %}
                    {% assign size_option_index = idx %}
                  {% endif %}
                {% endif %}
              {% endfor %}
              {% if color_option_index == '' and prod.options.size > 0 %}
                {% assign color_option_index = 0 %}
              {% endif %}
              {% if size_option_index == '' and prod.options.size > 1 %}
                {% assign size_option_index = 1 %}
              {% endif %}

              <span class="label">Color</span>
              {% assign seen_colors = '' | split: ',' %}
              <div class="hp-color-wrap" data-color-index="{{ color_option_index }}">
                {% for var in prod.variants %}
                  {% assign raw_color_val = var.options[color_option_index] | default: '' %}
                  {% assign color_key = raw_color_val | strip | downcase %}
                  {% if color_key != '' %}
                    {% unless seen_colors contains color_key %}
                      {% assign seen_colors = seen_colors | push: color_key %}
                      <button type="button" class="hp-color" data-option-index="{{ color_option_index }}" data-option-value="{{ raw_color_val | escape }}" aria-pressed="false">
                        {{ raw_color_val }}
                      </button>
                    {% endunless %}
                  {% endif %}
                {% endfor %}
              </div>

              <span class="label">Size</span>
              {% assign seen_sizes = '' | split: ',' %}
              <select class="hp-size" data-size-index="{{ size_option_index }}">
                <option value="">Choose your size</option>
                {% for var in prod.variants %}
                  {% assign size_val = var.options[size_option_index] | default: '' %}
                  {% assign size_key = size_val | strip | downcase %}
                  {% if size_key != '' %}
                    {% unless seen_sizes contains size_key %}
                      {% assign seen_sizes = seen_sizes | push: size_key %}
                      <option value="{{ size_val | escape }}">{{ size_val }}</option>
                    {% endunless %}
                  {% endif %}
                {% endfor %}
              </select>

              {% assign default_variant = prod.variants.first %}
              <form method="post" action="/cart/add" class="hp-add-form" data-block="{{ block.id }}" novalidate>
                <input type="hidden" name="id" value="{{ default_variant.id }}" class="hp-variant-input" />
                <input type="hidden" name="quantity" value="1" />
                <div>
                  <button type="submit" class="hp-add">ADD TO CART</button>
                </div>
              </form>

              {% assign variants_map = '' | split: ',' %}
              {% for var in prod.variants %}
                {% assign key = var.options | join: '||' %}
                {% capture map_item %}{{ key }}::{{ var.id }}::{{ var.available }}::{{ var.price | money_without_currency }}{% endcapture %}
                {% assign variants_map = variants_map | push: map_item %}
              {% endfor %}
              {% assign variants_json = variants_map | json %}
              <script type="application/json" class="hp-variants-data" data-block="{{ block.id }}">
                {{ variants_json }}
              </script>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
    {%- endfor -%}
  </div>
</div>

<script>
  (function(){
    'use strict';
    var sectionRoot = document.querySelector('[id^="hotspot-products-"]');
    if (!sectionRoot) return;

    sectionRoot.addEventListener('click', function(e){
      var btn = e.target.closest && e.target.closest('.hp-hotspot');
      if (!btn) return;
      e.preventDefault();
      var modal = document.getElementById(btn.getAttribute('data-open-modal-id'));
      if (!modal) return;
      modal.classList.add('open');
      modal.setAttribute('aria-hidden','false');
      document.documentElement.style.overflow = 'hidden';
      document.body.style.overflow = 'hidden';
      var focus = modal.querySelector('select, button, input, a, textarea');
      if (focus) focus.focus();
    });

    sectionRoot.addEventListener('click', function(e){
      var close = e.target.closest && e.target.closest('[data-close-modal-id]');
      if (close) {
        var mid = close.getAttribute('data-close-modal-id');
        var modal = document.getElementById(mid);
        if (modal) {
          modal.classList.remove('open');
          modal.setAttribute('aria-hidden','true');
          document.documentElement.style.overflow='';
          document.body.style.overflow='';
        }
        return;
      }
      var overlay = e.target.closest && e.target.closest('.hp-modal.open');
      if (overlay && e.target === overlay) {
        overlay.classList.remove('open');
        overlay.setAttribute('aria-hidden','true');
        document.documentElement.style.overflow='';
        document.body.style.overflow='';
      }
    });

    document.addEventListener('keydown', function(e){
      if (e.key === 'Escape' || e.key === 'Esc') {
        var opens = sectionRoot.querySelectorAll('.hp-modal.open');
        opens.forEach(function(m){
          m.classList.remove('open');
          m.setAttribute('aria-hidden','true');
        });
        document.documentElement.style.overflow='';
        document.body.style.overflow='';
      }
    });
  })();
</script>

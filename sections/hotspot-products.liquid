{%- comment -%} Hotspot Products Section {% endcomment -%}
{% schema %}
{
  "name": "Hotspot Products",
  "settings": [
    { "type": "text", "id": "heading", "label": "Section heading", "default": "Tisso vision in the wild" }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Hotspot product",
      "limit": 6,
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" },
        { "type": "image_picker", "id": "override_image", "label": "Override product image (optional)" },
        { "type": "number", "id": "hotspot_left", "label": "Hotspot left (%)", "default": 5 },
        { "type": "number", "id": "hotspot_top", "label": "Hotspot top (%)", "default": 5 }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [ { "name": "Hotspot Products" } ]
}
{% endschema %}

<section id="hotspot-products-{{ section.id }}" class="hotspot-products-section">
  <style>
    #hotspot-products-{{ section.id }} { padding:20px; font-family: system-ui, sans-serif; color:#111; }
    .hp-heading { font-size:22px; font-weight:700; margin-bottom:18px; }

    .hp-grid { display:grid; grid-template-columns: repeat(3,1fr); gap:18px; }
    @media (max-width:989px) { .hp-grid { grid-template-columns: repeat(2,1fr); } }

    .hp-card { position:relative; background:#fff; overflow:hidden; }
    .hp-image { width:100%; padding-bottom:100%; background:#f5f5f5; position:relative; }
    .hp-image img { position:absolute; inset:0; width:100%; height:100%; object-fit:cover; }

    .hp-hotspot { position:absolute; width:36px; height:36px; border-radius:50%; background:rgba(255,255,255,0.96); border:2px solid rgba(0,0,0,0.1); display:flex; align-items:center; justify-content:center; cursor:pointer; z-index:12; }
    .hp-hotspot .hp-plus { font-size:18px; font-weight:700; color:#111; }

    /* Modal styling */
    .hp-modal { position:fixed; inset:0; display:none; align-items:center; justify-content:center; background:rgba(0,0,0,0.45); z-index:2200; overflow-y:auto; padding:28px; }
    .hp-modal.open { display:flex; }
    .hp-modal__card { width:100%; max-width:480px; background:#fff; border-radius:10px; overflow:hidden; padding-bottom:20px; }
    .hp-modal-close { position:absolute; top:10px; right:10px; font-size:20px; background:transparent; border:0; cursor:pointer; color:#111; }

    .hp-top { display:grid; grid-template-columns:120px 1fr; gap:18px; padding:18px; }
    @media (max-width:640px) { .hp-top { grid-template-columns:1fr; } }
    .hp-top .imgwrap { background:#f6f6f6; min-height:120px; display:flex; align-items:center; justify-content:center; }
    .hp-top .imgwrap img { width:100%; height:100%; object-fit:cover; }
    .hp-title { margin:0 0 6px; font-size:18px; font-weight:700; }
    .hp-price { font-size:16px; font-weight:700; margin-top:6px; }
    .hp-desc { font-size:13px; color:#333; max-height:140px; overflow:auto; margin-top:10px; }

    /* Bottom controls */
    .hp-controls { padding:12px 18px; display:flex; flex-direction:column; gap:16px; }

    /* Color boxes */
    .hp-color-wrap { display:flex; gap:6px; }
    .hp-color { padding:8px 14px; cursor:pointer; font-weight:700; border:1px solid #ddd; border-radius:6px; text-align:center; flex:1; background:#fff; transition: all .2s; }
    .hp-color.selected { border:2px solid #111; background:#f0f0f0; }

    /* Size dropdown */
    .hp-size { width:100%; padding:10px 12px; border-radius:6px; border:1px solid #ddd; font-size:14px; }

    /* Add to cart button */
    .hp-add { background:#000; color:#fff; padding:14px 0; border:0; font-weight:700; text-align:center; display:flex; justify-content:center; align-items:center; gap:6px; border-radius:6px; }
    .hp-add::after { content:"→"; font-weight:700; }
  </style>

  <h2 class="hp-heading">{{ section.settings.heading }}</h2>
  <div class="hp-grid" id="hpGrid-{{ section.id }}">
    {%- for block in section.blocks -%}
      {% assign prod_handle = block.settings.product %}
      {% if prod_handle != blank and all_products[prod_handle] %}
        {% assign prod = all_products[prod_handle] %}
      {% else %}
        {% assign prod = nil %}
      {% endif %}

      <div class="hp-card" data-block-id="{{ block.id }}">
        <div class="hp-image">
          {% if block.settings.override_image != blank %}
            <img src="{{ block.settings.override_image | img_url:'800x800' }}" alt="{{ prod.title | default: block.settings.override_image.alt }}">
          {% elsif prod and prod.featured_image %}
            <img src="{{ prod.featured_image | img_url:'800x800' }}" alt="{{ prod.title }}">
          {% else %}
            <img src="{{ 'placeholder-image.png' | asset_url }}" alt="">
          {% endif %}
        </div>

        <button class="hp-hotspot" type="button" data-open-modal-id="hpModal-{{ block.id }}" style="left:{{ block.settings.hotspot_left | default:5 }}%; top:{{ block.settings.hotspot_top | default:5 }}%;">
          <span class="hp-plus">+</span>
        </button>

        <!-- Modal -->
        <div id="hpModal-{{ block.id }}" class="hp-modal" role="dialog" aria-hidden="true" aria-labelledby="hpTitle-{{ block.id }}">
          <div class="hp-modal__card">
            <button class="hp-modal-close" data-close-modal-id="hpModal-{{ block.id }}">✕</button>

            <!-- Top: Image left, text right -->
            <div class="hp-top">
              <div class="imgwrap">
                {% if block.settings.override_image != blank %}
                  <img src="{{ block.settings.override_image | img_url:'600x600' }}">
                {% elsif prod and prod.featured_image %}
                  <img src="{{ prod.featured_image | img_url:'600x600' }}">
                {% else %}
                  <img src="{{ 'placeholder-image.png' | asset_url }}">
                {% endif %}
              </div>
              <div class="hp-top-text">
                {% if prod %}
                  <h3 id="hpTitle-{{ block.id }}" class="hp-title">{{ prod.title }}</h3>
                  <div class="hp-price">{{ prod.variants.first.price | money }}</div>
                  <div class="hp-desc">{{ prod.description | strip_html | truncate: 260 }}</div>
                {% else %}
                  <h3 class="hp-title">No product selected</h3>
                  <div class="hp-desc">Please select a product for this hotspot.</div>
                {% endif %}
              </div>
            </div>

            <!-- Bottom: Controls -->
            {% if prod %}
            <div class="hp-controls">
              <!-- Colors as box switcher -->
              {% assign seen_colors = '' | split: ',' %}
              <div class="hp-color-wrap">
                {% for var in prod.variants %}
                  {% assign color_val = var.option1 | default:'' | strip | downcase %}
                  {% unless seen_colors contains color_val %}
                    {% assign seen_colors = seen_colors | push: color_val %}
                    <button type="button" class="hp-color" data-option-value="{{ var.option1 }}">{{ var.option1 }}</button>
                  {% endunless %}
                {% endfor %}
              </div>

              <!-- Sizes as dropdown -->
              {% assign seen_sizes = '' | split: ',' %}
              <select class="hp-size">
                <option value="">Choose your size</option>
                {% for var in prod.variants %}
                  {% assign size_val = var.option2 | default:'' | strip | downcase %}
                  {% unless seen_sizes contains size_val %}
                    {% assign seen_sizes = seen_sizes | push: size_val %}
                    <option value="{{ var.option2 }}">{{ var.option2 }}</option>
                  {% endunless %}
                {% endfor %}
              </select>

              <!-- Add to cart -->
              <form method="post" action="/cart/add" class="hp-add-form">
                <input type="hidden" name="id" value="{{ prod.variants.first.id }}">
                <input type="hidden" name="quantity" value="1">
                <button type="submit" class="hp-add">ADD TO CART</button>
              </form>
            </div>
            {% endif %}
          </div>
        </div>

      </div>
    {%- endfor -%}
  </div>

  <script>
    (function(){
      var sectionRoot = document.getElementById('hotspot-products-{{ section.id }}');
      if(!sectionRoot) return;

      // Open modal
      sectionRoot.addEventListener('click', function(e){
        var btn = e.target.closest('.hp-hotspot'); if(!btn) return;
        e.preventDefault();
        var modal = document.getElementById(btn.getAttribute('data-open-modal-id'));
        if(modal){ modal.classList.add('open'); modal.setAttribute('aria-hidden','false'); document.body.style.overflow='hidden'; }
      });

      // Close modal
      sectionRoot.addEventListener('click', function(e){
        var close = e.target.closest('[data-close-modal-id]');
        if(close){ var modal = document.getElementById(close.getAttribute('data-close-modal-id')); if(modal){ modal.classList.remove('open'); modal.setAttribute('aria-hidden','true'); document.body.style.overflow=''; } }
        var overlay = e.target.closest('.hp-modal.open');
        if(overlay && e.target === overlay){ overlay.classList.remove('open'); overlay.setAttribute('aria-hidden','true'); document.body.style.overflow=''; }
      });

      document.addEventListener('keydown', function(e){ if(e.key==='Escape'){ sectionRoot.querySelectorAll('.hp-modal.open').forEach(function(m){ m.classList.remove('open'); m.setAttribute('aria-hidden','true'); }); document.body.style.overflow=''; } });

      // Color selection
      sectionRoot.querySelectorAll('.hp-color-wrap').forEach(function(wrap){
        var btns = wrap.querySelectorAll('.hp-color');
        btns.forEach(function(btn){
          btn.addEventListener('click', function(){
            btns.forEach(function(b){ b.classList.remove('selected'); });
            btn.classList.add('selected');
          });
        });
        if(btns[0]) btns[0].classList.add('selected'); // default
      });
    })();
  </script>
</section>

